{"ast":null,"code":"var _jsxFileName = \"/Users/dj/work/JSON-forms-parser-REACT/src/index.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { combineReducers, createStore } from 'redux';\nimport schema from './schema.json';\nimport uischema from './uischema.json';\nimport { Actions, jsonformsReducer } from '@jsonforms/core';\nimport { materialCells, materialRenderers } from '@jsonforms/material-renderers';\nimport RatingControl from './RatingControl';\nimport ratingControlTester from './ratingControlTester';\nimport { devToolsEnhancer } from 'redux-devtools-extension'; // Setup Redux store\n\nvar data = {\n  name: 'Send email to Adrian',\n  description: 'Confirm if you have passed the subject\\nHereby ...',\n  done: true,\n  recurrence: 'Daily',\n  rating: 3\n};\nvar initState = {\n  jsonforms: {\n    cells: materialCells,\n    renderers: materialRenderers\n  }\n};\nvar rootReducer = combineReducers({\n  jsonforms: jsonformsReducer()\n});\nvar store = createStore(rootReducer, initState, devToolsEnhancer({}));\nstore.dispatch(Actions.init(data, schema, uischema)); // Register custom renderer for the Redux tab\n\nstore.dispatch(Actions.registerRenderer(ratingControlTester, RatingControl));\nReactDOM.render(React.createElement(App, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}), document.getElementById('root'));\nregisterServiceWorker();","map":{"version":3,"sources":["/Users/dj/work/JSON-forms-parser-REACT/src/index.tsx"],"names":["React","ReactDOM","App","registerServiceWorker","combineReducers","createStore","schema","uischema","Actions","jsonformsReducer","materialCells","materialRenderers","RatingControl","ratingControlTester","devToolsEnhancer","data","name","description","done","recurrence","rating","initState","jsonforms","cells","renderers","rootReducer","store","dispatch","init","registerRenderer","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAAiE,OAAjE;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,OAAT,EAAkBC,gBAAlB,QAA0D,iBAA1D;AACA,SACEC,aADF,EAEEC,iBAFF,QAGO,+BAHP;AAIA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,SAASC,gBAAT,QAAiC,0BAAjC,C,CAEA;;AACA,IAAMC,IAAI,GAAG;AACXC,EAAAA,IAAI,EAAE,sBADK;AAEXC,EAAAA,WAAW,EAAE,oDAFF;AAGXC,EAAAA,IAAI,EAAE,IAHK;AAIXC,EAAAA,UAAU,EAAE,OAJD;AAKXC,EAAAA,MAAM,EAAE;AALG,CAAb;AAQA,IAAMC,SAAyB,GAAG;AAChCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EAAEb,aADE;AAETc,IAAAA,SAAS,EAAEb;AAFF;AADqB,CAAlC;AAOA,IAAMc,WAA+C,GAAGrB,eAAe,CAAC;AACtEkB,EAAAA,SAAS,EAAEb,gBAAgB;AAD2C,CAAD,CAAvE;AAGA,IAAMiB,KAAK,GAAGrB,WAAW,CAACoB,WAAD,EAAcJ,SAAd,EAAyBP,gBAAgB,CAAC,EAAD,CAAzC,CAAzB;AACAY,KAAK,CAACC,QAAN,CAAenB,OAAO,CAACoB,IAAR,CAAab,IAAb,EAAmBT,MAAnB,EAA2BC,QAA3B,CAAf,E,CAEA;;AACAmB,KAAK,CAACC,QAAN,CAAenB,OAAO,CAACqB,gBAAR,CAAyBhB,mBAAzB,EAA8CD,aAA9C,CAAf;AAEAX,QAAQ,CAAC6B,MAAT,CAAgB,oBAAC,GAAD;AAAK,EAAA,KAAK,EAAEJ,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAuCK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAvC;AACA7B,qBAAqB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { combineReducers, createStore, Reducer, AnyAction } from 'redux';\nimport schema from './schema.json';\nimport uischema from './uischema.json';\nimport { Actions, jsonformsReducer, JsonFormsState } from '@jsonforms/core';\nimport {\n  materialCells,\n  materialRenderers\n} from '@jsonforms/material-renderers';\nimport RatingControl from './RatingControl';\nimport ratingControlTester from './ratingControlTester';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\n\n// Setup Redux store\nconst data = {\n  name: 'Send email to Adrian',\n  description: 'Confirm if you have passed the subject\\nHereby ...',\n  done: true,\n  recurrence: 'Daily',\n  rating: 3\n};\n\nconst initState: JsonFormsState = {\n  jsonforms: {\n    cells: materialCells,\n    renderers: materialRenderers\n  }\n};\n\nconst rootReducer: Reducer<JsonFormsState, AnyAction> = combineReducers({\n  jsonforms: jsonformsReducer()\n});\nconst store = createStore(rootReducer, initState, devToolsEnhancer({}));\nstore.dispatch(Actions.init(data, schema, uischema));\n\n// Register custom renderer for the Redux tab\nstore.dispatch(Actions.registerRenderer(ratingControlTester, RatingControl));\n\nReactDOM.render(<App store={store} />, document.getElementById('root'));\nregisterServiceWorker();\n"]},"metadata":{},"sourceType":"module"}