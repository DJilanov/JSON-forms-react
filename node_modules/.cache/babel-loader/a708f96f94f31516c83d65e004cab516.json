{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\n  The MIT License\n\n  Copyright (c) 2017-2019 EclipseSource Munich\n  https://github.com/eclipsesource/jsonforms\n\n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be included in\n  all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  THE SOFTWARE.\n*/\n\nvar isEqual_1 = __importDefault(require(\"lodash/isEqual\"));\n\nvar maxBy_1 = __importDefault(require(\"lodash/maxBy\"));\n\nvar memoize_1 = __importDefault(require(\"lodash/memoize\"));\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar UnknownRenderer_1 = require(\"./UnknownRenderer\");\n\nvar core_1 = require(\"@jsonforms/core\");\n\nvar JsonFormsContext_1 = require(\"./JsonFormsContext\");\n\nvar object_hash_1 = __importDefault(require(\"object-hash\"));\n\nvar hasRefs = memoize_1.default(function (schema) {\n  if (schema !== undefined) {\n    return Object.keys(core_1.findRefs(schema)).length > 0;\n  }\n\n  return false;\n}, function (schema) {\n  return schema ? object_hash_1.default(schema) : false;\n});\n\nvar ResolvedJsonFormsDispatchRenderer =\n/** @class */\nfunction (_super) {\n  __extends(ResolvedJsonFormsDispatchRenderer, _super);\n\n  function ResolvedJsonFormsDispatchRenderer(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.mounted = false;\n\n    _this.resolveAndUpdateSchema = function (props) {\n      props.refResolver(props.schema).then(function (resolvedSchema) {\n        _this.setState({\n          resolving: false,\n          resolvedSchema: resolvedSchema\n        });\n      });\n    };\n\n    _this.state = {\n      id: core_1.isControl(props.uischema) ? core_1.createId(props.uischema.scope) : undefined,\n      schema: props.schema,\n      resolvedSchema: props.schema,\n      resolving: false\n    };\n    return _this;\n  }\n\n  ResolvedJsonFormsDispatchRenderer.getDerivedStateFromProps = function (nextProps, prevState) {\n    if (!isEqual_1.default(prevState.schema, nextProps.schema)) {\n      var schemaHasRefs = hasRefs(nextProps.schema);\n      var newState = {\n        id: prevState.id,\n        resolvedSchema: schemaHasRefs ? undefined : nextProps.schema,\n        schema: nextProps.schema,\n        resolving: schemaHasRefs\n      };\n      return newState;\n    }\n\n    return null;\n  };\n\n  ResolvedJsonFormsDispatchRenderer.prototype.componentDidMount = function () {\n    if (this.state.resolving) {\n      this.resolveAndUpdateSchema(this.props);\n    }\n  };\n\n  ResolvedJsonFormsDispatchRenderer.prototype.componentDidUpdate = function () {\n    if (this.state.resolving) {\n      this.resolveAndUpdateSchema(this.props);\n    }\n  };\n\n  ResolvedJsonFormsDispatchRenderer.prototype.componentWillUnmount = function () {\n    this.mounted = false;\n\n    if (core_1.isControl(this.props.uischema)) {\n      core_1.removeId(this.state.id);\n    }\n  };\n\n  ResolvedJsonFormsDispatchRenderer.prototype.render = function () {\n    var _a = this.props,\n        uischema = _a.uischema,\n        path = _a.path,\n        enabled = _a.enabled,\n        renderers = _a.renderers;\n    var resolving = this.state.resolving;\n    var _schema = this.state.resolvedSchema;\n\n    if (resolving) {\n      return react_1.default.createElement(\"div\", null, \"Loading...\");\n    }\n\n    var renderer = maxBy_1.default(renderers, function (r) {\n      return r.tester(uischema, _schema);\n    });\n\n    if (renderer === undefined || renderer.tester(uischema, _schema) === -1) {\n      return react_1.default.createElement(UnknownRenderer_1.UnknownRenderer, {\n        type: 'renderer'\n      });\n    } else {\n      var Render = renderer.renderer;\n      return react_1.default.createElement(Render, {\n        uischema: uischema,\n        schema: _schema,\n        path: path,\n        enabled: enabled,\n        renderers: renderers,\n        id: this.state.id\n      });\n    }\n  };\n\n  return ResolvedJsonFormsDispatchRenderer;\n}(react_1.default.Component);\n\nexports.ResolvedJsonFormsDispatchRenderer = ResolvedJsonFormsDispatchRenderer;\n\nvar JsonFormsDispatchRenderer =\n/** @class */\nfunction (_super) {\n  __extends(JsonFormsDispatchRenderer, _super);\n\n  function JsonFormsDispatchRenderer(props) {\n    var _this = _super.call(this, props) || this;\n\n    var isResolved = !hasRefs(props.schema);\n    _this.state = __assign({}, _this.state, {\n      resolvedSchema: isResolved ? props.schema : undefined,\n      resolving: !isResolved\n    });\n    return _this;\n  }\n\n  return JsonFormsDispatchRenderer;\n}(ResolvedJsonFormsDispatchRenderer);\n\nexports.JsonFormsDispatchRenderer = JsonFormsDispatchRenderer;\nexports.JsonFormsDispatch = react_1.default.memo(function (props) {\n  var ctx = JsonFormsContext_1.useJsonForms();\n  var refResolver = JsonFormsContext_1.ctxToJsonFormsDispatchProps(ctx, props).refResolver;\n  var _a = ctx.core,\n      data = _a.data,\n      errors = _a.errors;\n  react_1.useLayoutEffect(function () {\n    props.onChange && props.onChange({\n      data: data,\n      errors: errors\n    });\n  }, [data, errors]);\n  return react_1.default.createElement(JsonFormsDispatchRenderer, {\n    schema: props.schema || ctx.core.schema,\n    uischema: props.uischema || ctx.core.uischema,\n    path: props.path || '',\n    enabled: props.enabled,\n    rootSchema: ctx.core.schema,\n    renderers: ctx.renderers,\n    refResolver: refResolver\n  });\n});\n\nexports.JsonForms = function (props) {\n  var ajv = props.ajv,\n      data = props.data,\n      schema = props.schema,\n      uischema = props.uischema,\n      renderers = props.renderers,\n      cells = props.cells,\n      refParserOptions = props.refParserOptions,\n      onChange = props.onChange;\n  var schemaToUse = schema !== undefined ? schema : core_1.Generate.jsonSchema(data);\n  var uischemaToUse = typeof uischema === 'object' ? uischema : core_1.Generate.uiSchema(schemaToUse);\n  return react_1.default.createElement(JsonFormsContext_1.JsonFormsStateProvider, {\n    initState: {\n      core: {\n        ajv: ajv,\n        data: data,\n        refParserOptions: refParserOptions,\n        schema: schemaToUse,\n        uischema: uischemaToUse\n      },\n      renderers: renderers,\n      cells: cells\n    }\n  }, react_1.default.createElement(exports.JsonFormsDispatch, {\n    onChange: onChange\n  }));\n};","map":null,"metadata":{},"sourceType":"script"}