{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar merge_1 = __importDefault(require(\"lodash/merge\"));\n\nvar get_1 = __importDefault(require(\"lodash/get\"));\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar react_2 = require(\"@jsonforms/react\");\n\nvar core_1 = require(\"@jsonforms/core\");\n\nvar ExpansionPanelDetails_1 = __importDefault(require(\"@material-ui/core/ExpansionPanelDetails\"));\n\nvar IconButton_1 = __importDefault(require(\"@material-ui/core/IconButton\"));\n\nvar ExpansionPanel_1 = __importDefault(require(\"@material-ui/core/ExpansionPanel\"));\n\nvar find_1 = __importDefault(require(\"lodash/find\"));\n\nvar ExpansionPanelSummary_1 = __importDefault(require(\"@material-ui/core/ExpansionPanelSummary\"));\n\nvar core_2 = require(\"@material-ui/core\");\n\nvar ExpandMore_1 = __importDefault(require(\"@material-ui/icons/ExpandMore\"));\n\nvar Avatar_1 = __importDefault(require(\"@material-ui/core/Avatar\"));\n\nvar Delete_1 = __importDefault(require(\"@material-ui/icons/Delete\"));\n\nvar ArrowUpward_1 = __importDefault(require(\"@material-ui/icons/ArrowUpward\"));\n\nvar ArrowDownward_1 = __importDefault(require(\"@material-ui/icons/ArrowDownward\"));\n\nvar v1_1 = __importDefault(require(\"uuid/v1\"));\n\nvar iconStyle = {\n  float: 'right'\n};\n\nvar ExpandPanelRenderer = function ExpandPanelRenderer(props) {\n  var labelHtmlId = react_1.useState(\"id\" + v1_1.default())[0];\n  var childLabel = props.childLabel,\n      childPath = props.childPath,\n      index = props.index,\n      expanded = props.expanded,\n      moveDown = props.moveDown,\n      moveUp = props.moveUp,\n      enableMoveDown = props.enableMoveDown,\n      enableMoveUp = props.enableMoveUp,\n      handleExpansion = props.handleExpansion,\n      removeItems = props.removeItems,\n      path = props.path,\n      rootSchema = props.rootSchema,\n      schema = props.schema,\n      uischema = props.uischema,\n      uischemas = props.uischemas,\n      renderers = props.renderers,\n      config = props.config;\n  var foundUISchema = core_1.findUISchema(uischemas, schema, uischema.scope, path, undefined, uischema, rootSchema);\n  var appliedUiSchemaOptions = merge_1.default({}, config, uischema.options);\n  return react_1.default.createElement(ExpansionPanel_1.default, {\n    \"aria-labelledby\": labelHtmlId,\n    expanded: expanded,\n    onChange: handleExpansion(childPath)\n  }, react_1.default.createElement(ExpansionPanelSummary_1.default, {\n    expandIcon: react_1.default.createElement(ExpandMore_1.default, null)\n  }, react_1.default.createElement(core_2.Grid, {\n    container: true,\n    alignItems: 'center'\n  }, react_1.default.createElement(core_2.Grid, {\n    item: true,\n    xs: 7,\n    md: 10\n  }, react_1.default.createElement(core_2.Grid, {\n    container: true,\n    alignItems: 'center'\n  }, react_1.default.createElement(core_2.Grid, {\n    item: true,\n    xs: 2,\n    md: 1\n  }, react_1.default.createElement(Avatar_1.default, {\n    \"aria-label\": 'Index'\n  }, index + 1)), react_1.default.createElement(core_2.Grid, {\n    item: true,\n    xs: 10,\n    md: 11\n  }, react_1.default.createElement(\"span\", {\n    id: labelHtmlId\n  }, childLabel)))), react_1.default.createElement(core_2.Grid, {\n    item: true,\n    xs: 5,\n    md: 2\n  }, react_1.default.createElement(core_2.Grid, {\n    container: true,\n    justify: 'flex-end'\n  }, react_1.default.createElement(core_2.Grid, {\n    item: true\n  }, react_1.default.createElement(core_2.Grid, {\n    container: true,\n    direction: 'row',\n    justify: 'center',\n    alignItems: 'center'\n  }, appliedUiSchemaOptions.showSortButtons ? react_1.default.createElement(react_1.Fragment, null, react_1.default.createElement(core_2.Grid, {\n    item: true\n  }, react_1.default.createElement(IconButton_1.default, {\n    onClick: moveUp(path, index),\n    style: iconStyle,\n    disabled: !enableMoveUp,\n    \"aria-label\": \"Move up\"\n  }, react_1.default.createElement(ArrowUpward_1.default, null))), react_1.default.createElement(core_2.Grid, {\n    item: true\n  }, react_1.default.createElement(IconButton_1.default, {\n    onClick: moveDown(path, index),\n    style: iconStyle,\n    disabled: !enableMoveDown,\n    \"aria-label\": \"Move down\"\n  }, react_1.default.createElement(ArrowDownward_1.default, null)))) : '', react_1.default.createElement(core_2.Grid, {\n    item: true\n  }, react_1.default.createElement(IconButton_1.default, {\n    onClick: removeItems(path, [index]),\n    style: iconStyle,\n    \"aria-label\": \"Delete\"\n  }, react_1.default.createElement(Delete_1.default, null))))))))), react_1.default.createElement(ExpansionPanelDetails_1.default, null, react_1.default.createElement(react_2.JsonFormsDispatch, {\n    schema: schema,\n    uischema: foundUISchema,\n    path: childPath,\n    key: childPath,\n    renderers: renderers\n  })));\n};\n/**\n * Maps state to dispatch properties of an expand pandel control.\n *\n * @param dispatch the store's dispatch method\n * @returns {DispatchPropsOfArrayControl} dispatch props of an expand panel control\n */\n\n\nexports.ctxDispatchToExpandPanelProps = function (dispatch) {\n  return {\n    removeItems: function removeItems(path, toDelete) {\n      return function (event) {\n        event.stopPropagation();\n        dispatch(core_1.update(path, function (array) {\n          toDelete.sort().reverse().forEach(function (s) {\n            return array.splice(s, 1);\n          });\n          return array;\n        }));\n      };\n    },\n    moveUp: function moveUp(path, toMove) {\n      return function (event) {\n        event.stopPropagation();\n        dispatch(core_1.update(path, function (array) {\n          core_1.moveUp(array, toMove);\n          return array;\n        }));\n      };\n    },\n    moveDown: function moveDown(path, toMove) {\n      return function (event) {\n        event.stopPropagation();\n        dispatch(core_1.update(path, function (array) {\n          core_1.moveDown(array, toMove);\n          return array;\n        }));\n      };\n    }\n  };\n};\n\nvar getFirstPrimitiveProp = function getFirstPrimitiveProp(schema) {\n  if (schema.properties) {\n    return find_1.default(Object.keys(schema.properties), function (propName) {\n      var prop = schema.properties[propName];\n      return prop.type === 'string' || prop.type === 'number' || prop.type === 'integer';\n    });\n  }\n\n  return undefined;\n};\n/**\n * Map state to control props.\n * @param state the JSON Forms state\n * @param ownProps any own props\n * @returns {StatePropsOfControl} state props for a control\n */\n\n\nexports.withContextToExpandPanelProps = function (Component) {\n  return function (_a) {\n    var ctx = _a.ctx,\n        props = _a.props;\n    var dispatchProps = exports.ctxDispatchToExpandPanelProps(ctx.dispatch);\n    var childLabelProp = props.childLabelProp,\n        schema = props.schema,\n        path = props.path,\n        index = props.index,\n        uischemas = props.uischemas;\n    var childPath = core_1.composePaths(path, \"\" + index);\n    var childData = core_1.Resolve.data(ctx.core.data, childPath);\n    var childLabel = childLabelProp ? get_1.default(childData, childLabelProp, '') : get_1.default(childData, getFirstPrimitiveProp(schema), '');\n    return react_1.default.createElement(Component, __assign({}, props, dispatchProps, {\n      childLabel: childLabel,\n      childPath: childPath,\n      uischemas: uischemas\n    }));\n  };\n};\n\nexports.withJsonFormsExpandPanelProps = function (Component) {\n  return react_2.withJsonFormsContext(exports.withContextToExpandPanelProps(react_1.default.memo(Component, function (prevProps, nextProps) {\n    return react_2.areEqual(prevProps, nextProps);\n  })));\n};\n\nexports.default = exports.withJsonFormsExpandPanelProps(ExpandPanelRenderer);","map":null,"metadata":{},"sourceType":"script"}